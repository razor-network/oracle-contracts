version: 2.1
orbs:
  coveralls: coveralls/coveralls@1.0.6
  node: circleci/node@4.1
jobs:
  test:
    docker:
      - image: 'cimg/node:15.3'
    parallelism: 6
    resource_class: medium
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Run tests
          command: |
            TESTFILES=$(circleci tests glob "test/*.js" | circleci tests split --split-by=timings)
            CI=true npm run test $TESTFILES
      - store_artifacts:
          path: test
          prefix: test
      - store_test_results:
          path: test-results

  lint:
    docker:
      - image: 'cimg/node:15.3'
    # parallelism: 10
    resource_class: medium
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Run Lint
          command: npm run lint
      - store_artifacts:
          path: lint
          prefix: lint
      - store_test_results:
          path: test-results
  coverage:
    docker:
      - image: 'cimg/node:15.3'
    # parallelism: 10
    resource_class: xlarge
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Run Coverage
          command: npm run coverage
      - coveralls/upload
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results
  mythx:
    docker:
      - image: 'cimg/python:3.9.6-node'
    resource_class: large
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Setup virtual environment
          command: python -m virtualenv venv
      - run:
          name: Install MythX CLI
          command: |
            . venv/bin/activate
            pip install mythx-cli
      - run:
          name: Analyze with MythX
          command: >
            . venv/bin/activate

            mythx --ci --yes analyze --remap-import
            "@openzeppelin/=$(pwd)/node_modules/@openzeppelin/" --solc-version
            0.8.4 contracts/ --swc-blacklist 103,120
  
notify:
  webhooks:
    - url: >-
        https://coveralls.io/webhook?repo_token=${process.env.COVERALLS_REPO_TOKEN}
workflows:
  tests:
    jobs:
      - test
      - coverage
      - mythx
      - lint
