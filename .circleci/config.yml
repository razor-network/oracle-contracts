version: 2.1
orbs:
  coveralls: coveralls/coveralls@1.0.6
  node: circleci/node@4.1
jobs:
  checkout_source:
    docker:
      - image: cimg/node:16.5
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .

  install_dependencies:
    docker:
      - image: cimg/node:16.5
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            npm install
            npm run cp-ci-env
      - save_cache:
          key: dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .env
            - node_modules/*

  test:
    docker:
      - image: "cimg/node:16.5"
    resource_class: large
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: |
            CI=true npm run test
      - store_artifacts:
          path: test
          prefix: test

  lint:
    docker:
      - image: "cimg/node:16.5"
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Lint
          command: npm run lint
      - store_artifacts:
          path: lint
          prefix: lint

  coverage:
    docker:
      - image: "cimg/node:16.5"
    # parallelism: 10
    resource_class: xlarge
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Coverage
          command: npm run coverage
      - coveralls/upload
      - store_artifacts:
          path: coverage
          prefix: coverage

  slither:
    docker:
      - image: "trailofbits/eth-security-toolbox"
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Slither
          command: |
            slither . --filter-paths "node_modules" --disable-color

  gasCompare:
    docker:
      - image: "cimg/node:16.5"
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run GasCompare
          command: |
            if [ "$CIRCLE_BRANCH" == 'master' ]; then
            exit 0
            fi
            CI=true npm run test
            mv ./gasReporterOutput.json /tmp/gasReporterOutput_Current.json
            git checkout master
            CI=true npm run test
            mv ./gasReporterOutput.json /tmp/gasReporterOutput_Master.json
            git checkout $CIRCLE_BRANCH
            npm run gasCompare /tmp/gasReporterOutput_Current.json /tmp/gasReporterOutput_Master.json
  deploy-contracts:
    docker:
      - image: "cimg/node:16.5"
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            npm install
      - save_cache:
          key: dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Deploy Contracts
          command: |
            cat deployed/mumbai/addresses.json
            printenv > .env
            address='{"Governance": "0x00613a2a5040615B741011Be2EEA793eD68847A8", "BlockManager": "0x13A01446b3FB0924F66DA18e20E3BCC6142DBEba","AssetManager": "0x213343a416C869112751Eb12A948aF932710Ee13","StakeManager": "0x1b20b61B23dAF44b897F9aA49A257eB2399f93bd","RewardManager": "0x4F8d72C05C37440FDdf473cd84EE4341782A1C96","VoteManager": "0xaA43956F27401f94AE2dc1dcF3D7336AF1e82456","Delegator": "0xe2De3Bf42CA96724ADd97D7e56886C3aCE82123b","RAZOR": "0x8fe49dAc6e13670d53b25281a8e75e4C49A0833D","StakedTokenFactory": "0x69c2cAbB848A17a39B411009ce39E72FC2c47245","RandomNoManager": "0x1033993Af488e56405e1840E2760C8C73C1B661E"}'
            echo $address >.previous-deployment-addresses
            npm run deploy:mumbai
  git-commit:
    docker:
      - image: "cimg/node:16.5"
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Commit into git
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "shrikant1997upadhyay@gmail.com"
            git config user.name "Shrikant Upadhyay"
            git commit --allow-empty -m "Commit from CircleCI"
            # Push quietly to prevent showing the token in log
      #git push -q https://$GIT_TOKEN@github.com/Shrikant1212/contracts.git
  publish-package:
    docker:
      - image: "cimg/node:16.5"
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Create .npmrc
          command: |
            echo //$NPM_REGISTRY_STAG/:_authToken=$NPM_TOKEN_STAG > .npmrc
      - run:
          name: publish package
          command: |
            npm publish --registry $NPM_REGISTRY_STAG

notify:
  webhooks:
    - url: >-
        https://coveralls.io/webhook?repo_token=${process.env.COVERALLS_REPO_TOKEN}
workflows:
  # tests:
  #   jobs:
  #     - checkout_source
  #     - install_dependencies:
  #         requires:
  #           - checkout_source
  #     - test:
  #         requires:
  #           - install_dependencies
  #     - coverage:
  #         requires:
  #           - install_dependencies
  #     - slither:
  #         requires:
  #           - install_dependencies
  #     - lint:
  #         requires:
  #           - install_dependencies
  #     - gasCompare:
  #         requires:
  #           - install_dependencies
  deploy:
    jobs:
      - checkout_source
      # - deploy-contracts:
      #     requires:
      #       - checkout_source
      #     context: Stag
      # - git-commit:
      #     requires:
      #       - checkout_source
      - publish-package:
          requires:
            - checkout_source
