{"metadata":"{\"compiler\":{\"version\":\"0.8.4\"},\"sources\":{\"contracts/lib/Random.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nlibrary Random {\\n    // pseudo random number generator based on block hashes. returns 0 -> max-1\\n    function prng(\\n        uint8 numBlocks,\\n        uint256 max,\\n        bytes32 seed,\\n        uint256 epochLength\\n    ) public view returns (uint256) {\\n        bytes32 hash = prngHash(numBlocks, seed, epochLength);\\n        uint256 sum = uint256(hash);\\n        return (sum % max);\\n    }\\n\\n    // pseudo random hash generator based on block hashes.\\n    function prngHash(\\n        uint8 numBlocks,\\n        bytes32 seed,\\n        uint256 epochLength\\n    ) public view returns (bytes32) {\\n        bytes32 sum = blockHashes(numBlocks, epochLength);\\n        sum = keccak256(abi.encodePacked(sum, seed));\\n        return (sum);\\n    }\\n\\n    function blockHashes(uint8 numBlocks, uint256 epochLength) public view returns (bytes32) {\\n        bytes32 sum;\\n        // start from the start of the epoch\\n        uint256 blockNumberEpochStart = (block.number / (epochLength)) * (epochLength);\\n        for (uint8 i = 1; i <= numBlocks; i++) {\\n            sum = keccak256(abi.encodePacked(sum, blockhash(blockNumberEpochStart - i)));\\n        }\\n        return (sum);\\n    }\\n}\\n\"}}}","address":"0x95401dc811bb5740090279Ba06cfA8fcF6113778","bytecode":"0x61031861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063320e985c146100505780637cf6c43a14610075578063a874132b14610088575b600080fd5b61006361005e366004610200565b61009b565b60405190815260200160405180910390f35b6100636100833660046101d7565b6100c1565b6100636100963660046101a5565b61014a565b6000806100a986858561014a565b9050806100b686826102a2565b979650505050505050565b60008080836100d08143610238565b6100da919061024c565b905060015b8560ff168160ff161161014057826100fa60ff83168461026b565b40604051602001610115929190918252602082015260400190565b604051602081830303815290604052805190602001209250808061013890610282565b9150506100df565b5090949350505050565b60008061015785846100c1565b604080516020810183905290810186905290915060600160408051808303601f19018152919052805160209091012095945050505050565b803560ff811681146101a057600080fd5b919050565b6000806000606084860312156101b9578283fd5b6101c28461018f565b95602085013595506040909401359392505050565b600080604083850312156101e9578182fd5b6101f28361018f565b946020939093013593505050565b60008060008060808587031215610215578081fd5b61021e8561018f565b966020860135965060408601359560600135945092505050565b600082610247576102476102cc565b500490565b6000816000190483118215151615610266576102666102b6565b500290565b60008282101561027d5761027d6102b6565b500390565b600060ff821660ff811415610299576102996102b6565b60010192915050565b6000826102b1576102b16102cc565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea264697066735822122061cc93673e96bc8e90f6e7d86f4c53873ce09ec198831b4891d3c63185a7aad964736f6c63430008040033","deployedBytecode":"0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063320e985c146100505780637cf6c43a14610075578063a874132b14610088575b600080fd5b61006361005e366004610200565b61009b565b60405190815260200160405180910390f35b6100636100833660046101d7565b6100c1565b6100636100963660046101a5565b61014a565b6000806100a986858561014a565b9050806100b686826102a2565b979650505050505050565b60008080836100d08143610238565b6100da919061024c565b905060015b8560ff168160ff161161014057826100fa60ff83168461026b565b40604051602001610115929190918252602082015260400190565b604051602081830303815290604052805190602001209250808061013890610282565b9150506100df565b5090949350505050565b60008061015785846100c1565b604080516020810183905290810186905290915060600160408051808303601f19018152919052805160209091012095945050505050565b803560ff811681146101a057600080fd5b919050565b6000806000606084860312156101b9578283fd5b6101c28461018f565b95602085013595506040909401359392505050565b600080604083850312156101e9578182fd5b6101f28361018f565b946020939093013593505050565b60008060008060808587031215610215578081fd5b61021e8561018f565b966020860135965060408601359560600135945092505050565b600082610247576102476102cc565b500490565b6000816000190483118215151615610266576102666102b6565b500290565b60008282101561027d5761027d6102b6565b500390565b600060ff821660ff811415610299576102996102b6565b60010192915050565b6000826102b1576102b16102cc565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea264697066735822122061cc93673e96bc8e90f6e7d86f4c53873ce09ec198831b4891d3c63185a7aad964736f6c63430008040033","abi":[{"inputs":[{"internalType":"uint8","name":"numBlocks","type":"uint8"},{"internalType":"uint256","name":"epochLength","type":"uint256"}],"name":"blockHashes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"numBlocks","type":"uint8"},{"internalType":"uint256","name":"max","type":"uint256"},{"internalType":"bytes32","name":"seed","type":"bytes32"},{"internalType":"uint256","name":"epochLength","type":"uint256"}],"name":"prng","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"numBlocks","type":"uint8"},{"internalType":"bytes32","name":"seed","type":"bytes32"},{"internalType":"uint256","name":"epochLength","type":"uint256"}],"name":"prngHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}]}